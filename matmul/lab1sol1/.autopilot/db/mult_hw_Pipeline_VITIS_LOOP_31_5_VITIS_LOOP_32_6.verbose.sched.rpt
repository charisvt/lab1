

================================================================
== Vitis HLS Report for 'mult_hw_Pipeline_VITIS_LOOP_31_5_VITIS_LOOP_32_6'
================================================================
* Date:           Wed Nov 13 12:41:20 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        matmul
* Solution:       lab1sol1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.217 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      133|      133|  1.330 us|  1.330 us|  133|  133|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_31_5_VITIS_LOOP_32_6  |      131|      131|         5|          1|          1|   128|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 8 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten26 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten26"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 12 [1/1] (0.38ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 13 [1/1] (0.38ns)   --->   "%store_ln0 = store i5 0, i5 %j"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln0 = br void %VITIS_LOOP_34_7"   --->   Operation 14 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i"   --->   Operation 15 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten26_load = load i8 %indvar_flatten26" [matmul.cpp:31]   --->   Operation 16 'load' 'indvar_flatten26_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty = trunc i4 %i_1"   --->   Operation 17 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %empty, i2 0"   --->   Operation 18 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 19 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.58ns)   --->   "%icmp_ln31 = icmp_eq  i8 %indvar_flatten26_load, i8 128" [matmul.cpp:31]   --->   Operation 20 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.70ns)   --->   "%add_ln31 = add i8 %indvar_flatten26_load, i8 1" [matmul.cpp:31]   --->   Operation 21 'add' 'add_ln31' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %icmp_ln31, void %for.inc84, void %VITIS_LOOP_42_8.exitStub" [matmul.cpp:31]   --->   Operation 22 'br' 'br_ln31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j_load = load i5 %j" [matmul.cpp:32]   --->   Operation 23 'load' 'j_load' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.63ns)   --->   "%icmp_ln32 = icmp_eq  i5 %j_load, i5 16" [matmul.cpp:32]   --->   Operation 24 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.27ns)   --->   "%select_ln31 = select i1 %icmp_ln32, i5 0, i5 %j_load" [matmul.cpp:31]   --->   Operation 25 'select' 'select_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.70ns)   --->   "%add_ln31_1 = add i4 %i_1, i4 1" [matmul.cpp:31]   --->   Operation 26 'add' 'add_ln31_1' <Predicate = (!icmp_ln31)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%empty_21 = trunc i4 %add_ln31_1" [matmul.cpp:31]   --->   Operation 27 'trunc' 'empty_21' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_mid1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %empty_21, i2 0" [matmul.cpp:31]   --->   Operation 28 'bitconcatenate' 'p_mid1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.35ns)   --->   "%select_ln31_1 = select i1 %icmp_ln32, i4 %add_ln31_1, i4 %i_1" [matmul.cpp:31]   --->   Operation 29 'select' 'select_ln31_1' <Predicate = (!icmp_ln31)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i4 %select_ln31_1" [matmul.cpp:31]   --->   Operation 30 'trunc' 'trunc_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%p_mid3 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i3.i4, i3 %trunc_ln31, i4 0" [matmul.cpp:31]   --->   Operation 31 'bitconcatenate' 'p_mid3' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.27ns)   --->   "%select_ln31_2 = select i1 %icmp_ln32, i5 %p_mid1, i5 %tmp_3" [matmul.cpp:31]   --->   Operation 32 'select' 'select_ln31_2' <Predicate = (!icmp_ln31)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i5 %select_ln31_2" [matmul.cpp:31]   --->   Operation 33 'zext' 'zext_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%A_V_addr = getelementptr i8 %A_V, i64 0, i64 %zext_ln31"   --->   Operation 34 'getelementptr' 'A_V_addr' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 35 [2/2] (0.66ns)   --->   "%A_V_load = load i5 %A_V_addr" [matmul.cpp:31]   --->   Operation 35 'load' 'A_V_load' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%or_ln31 = or i5 %select_ln31_2, i5 1" [matmul.cpp:31]   --->   Operation 36 'or' 'or_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln31_2 = zext i5 %or_ln31" [matmul.cpp:31]   --->   Operation 37 'zext' 'zext_ln31_2' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%A_V_addr_1 = getelementptr i8 %A_V, i64 0, i64 %zext_ln31_2"   --->   Operation 38 'getelementptr' 'A_V_addr_1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (0.66ns)   --->   "%A_V_load_1 = load i5 %A_V_addr_1" [matmul.cpp:31]   --->   Operation 39 'load' 'A_V_load_1' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%or_ln31_1 = or i5 %select_ln31_2, i5 2" [matmul.cpp:31]   --->   Operation 40 'or' 'or_ln31_1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln31_4 = zext i5 %or_ln31_1" [matmul.cpp:31]   --->   Operation 41 'zext' 'zext_ln31_4' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%A_V_addr_2 = getelementptr i8 %A_V, i64 0, i64 %zext_ln31_4"   --->   Operation 42 'getelementptr' 'A_V_addr_2' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 43 [2/2] (0.66ns)   --->   "%A_V_load_2 = load i5 %A_V_addr_2" [matmul.cpp:31]   --->   Operation 43 'load' 'A_V_load_2' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%or_ln31_2 = or i5 %select_ln31_2, i5 3" [matmul.cpp:31]   --->   Operation 44 'or' 'or_ln31_2' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln31_6 = zext i5 %or_ln31_2" [matmul.cpp:31]   --->   Operation 45 'zext' 'zext_ln31_6' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%A_V_addr_3 = getelementptr i8 %A_V, i64 0, i64 %zext_ln31_6"   --->   Operation 46 'getelementptr' 'A_V_addr_3' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 47 [2/2] (0.66ns)   --->   "%A_V_load_3 = load i5 %A_V_addr_3" [matmul.cpp:31]   --->   Operation 47 'load' 'A_V_load_3' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%j_2_cast4 = zext i5 %select_ln31" [matmul.cpp:31]   --->   Operation 48 'zext' 'j_2_cast4' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%j_2_cast3 = zext i5 %select_ln31" [matmul.cpp:31]   --->   Operation 49 'zext' 'j_2_cast3' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%B_V_addr = getelementptr i8 %B_V, i64 0, i64 %j_2_cast4"   --->   Operation 50 'getelementptr' 'B_V_addr' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 51 [2/2] (0.66ns)   --->   "%B_V_load = load i6 %B_V_addr"   --->   Operation 51 'load' 'B_V_load' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 52 [1/1] (0.10ns)   --->   "%xor_ln35 = xor i5 %select_ln31, i5 16" [matmul.cpp:35]   --->   Operation 52 'xor' 'xor_ln35' <Predicate = (!icmp_ln31)> <Delay = 0.10> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.10> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln186_1 = zext i5 %xor_ln35"   --->   Operation 53 'zext' 'zext_ln186_1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%B_V_addr_1 = getelementptr i8 %B_V, i64 0, i64 %zext_ln186_1"   --->   Operation 54 'getelementptr' 'B_V_addr_1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 55 [2/2] (0.66ns)   --->   "%B_V_load_1 = load i6 %B_V_addr_1"   --->   Operation 55 'load' 'B_V_load_1' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln186_3_cast = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i1.i5, i1 1, i5 %select_ln31"   --->   Operation 56 'bitconcatenate' 'zext_ln186_3_cast' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln186_3 = zext i6 %zext_ln186_3_cast"   --->   Operation 57 'zext' 'zext_ln186_3' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%B_V_addr_2 = getelementptr i8 %B_V, i64 0, i64 %zext_ln186_3"   --->   Operation 58 'getelementptr' 'B_V_addr_2' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 59 [2/2] (0.66ns)   --->   "%B_V_load_2 = load i6 %B_V_addr_2"   --->   Operation 59 'load' 'B_V_load_2' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln186 = sext i5 %xor_ln35"   --->   Operation 60 'sext' 'sext_ln186' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln186_5 = zext i6 %sext_ln186"   --->   Operation 61 'zext' 'zext_ln186_5' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%B_V_addr_3 = getelementptr i8 %B_V, i64 0, i64 %zext_ln186_5"   --->   Operation 62 'getelementptr' 'B_V_addr_3' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_1 : Operation 63 [2/2] (0.66ns)   --->   "%B_V_load_3 = load i6 %B_V_addr_3"   --->   Operation 63 'load' 'B_V_load_3' <Predicate = (!icmp_ln31)> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 64 [1/1] (0.70ns)   --->   "%add_ln37 = add i7 %j_2_cast3, i7 %p_mid3" [matmul.cpp:37]   --->   Operation 64 'add' 'add_ln37' <Predicate = (!icmp_ln31)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.70ns)   --->   "%add_ln32 = add i5 %select_ln31, i5 1" [matmul.cpp:32]   --->   Operation 65 'add' 'add_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.38ns)   --->   "%store_ln32 = store i8 %add_ln31, i8 %indvar_flatten26" [matmul.cpp:32]   --->   Operation 66 'store' 'store_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.38>
ST_1 : Operation 67 [1/1] (0.38ns)   --->   "%store_ln32 = store i4 %select_ln31_1, i4 %i" [matmul.cpp:32]   --->   Operation 67 'store' 'store_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.38>
ST_1 : Operation 68 [1/1] (0.38ns)   --->   "%store_ln32 = store i5 %add_ln32, i5 %j" [matmul.cpp:32]   --->   Operation 68 'store' 'store_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 2.21>
ST_2 : Operation 69 [1/2] (0.66ns)   --->   "%A_V_load = load i5 %A_V_addr" [matmul.cpp:31]   --->   Operation 69 'load' 'A_V_load' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i8 %A_V_load" [matmul.cpp:31]   --->   Operation 70 'zext' 'zext_ln31_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/2] (0.66ns)   --->   "%A_V_load_1 = load i5 %A_V_addr_1" [matmul.cpp:31]   --->   Operation 71 'load' 'A_V_load_1' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln31_3 = zext i8 %A_V_load_1" [matmul.cpp:31]   --->   Operation 72 'zext' 'zext_ln31_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/2] (0.66ns)   --->   "%A_V_load_2 = load i5 %A_V_addr_2" [matmul.cpp:31]   --->   Operation 73 'load' 'A_V_load_2' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln31_5 = zext i8 %A_V_load_2" [matmul.cpp:31]   --->   Operation 74 'zext' 'zext_ln31_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/2] (0.66ns)   --->   "%A_V_load_3 = load i5 %A_V_addr_3" [matmul.cpp:31]   --->   Operation 75 'load' 'A_V_load_3' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 32> <RAM>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln31_7 = zext i8 %A_V_load_3" [matmul.cpp:31]   --->   Operation 76 'zext' 'zext_ln31_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/2] (0.66ns)   --->   "%B_V_load = load i6 %B_V_addr"   --->   Operation 77 'load' 'B_V_load' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln186 = zext i8 %B_V_load"   --->   Operation 78 'zext' 'zext_ln186' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [3/3] (0.99ns) (grouped into DSP with root node add_ln840)   --->   "%mul_ln1494 = mul i16 %zext_ln186, i16 %zext_ln31_1"   --->   Operation 79 'mul' 'mul_ln1494' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 80 [1/2] (0.66ns)   --->   "%B_V_load_1 = load i6 %B_V_addr_1"   --->   Operation 80 'load' 'B_V_load_1' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln186_2 = zext i8 %B_V_load_1"   --->   Operation 81 'zext' 'zext_ln186_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (1.55ns)   --->   "%mul_ln1494_1 = mul i16 %zext_ln186_2, i16 %zext_ln31_3"   --->   Operation 82 'mul' 'mul_ln1494_1' <Predicate = true> <Delay = 1.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/2] (0.66ns)   --->   "%B_V_load_2 = load i6 %B_V_addr_2"   --->   Operation 83 'load' 'B_V_load_2' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln186_4 = zext i8 %B_V_load_2"   --->   Operation 84 'zext' 'zext_ln186_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (1.55ns)   --->   "%mul_ln1494_2 = mul i16 %zext_ln186_4, i16 %zext_ln31_5"   --->   Operation 85 'mul' 'mul_ln1494_2' <Predicate = true> <Delay = 1.55> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/2] (0.66ns)   --->   "%B_V_load_3 = load i6 %B_V_addr_3"   --->   Operation 86 'load' 'B_V_load_3' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln186_6 = zext i8 %B_V_load_3"   --->   Operation 87 'zext' 'zext_ln186_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 88 [3/3] (0.99ns) (grouped into DSP with root node add_ln840_1)   --->   "%mul_ln1494_3 = mul i16 %zext_ln186_6, i16 %zext_ln31_7"   --->   Operation 88 'mul' 'mul_ln1494_3' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 89 [2/3] (0.99ns) (grouped into DSP with root node add_ln840)   --->   "%mul_ln1494 = mul i16 %zext_ln186, i16 %zext_ln31_1"   --->   Operation 89 'mul' 'mul_ln1494' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 90 [2/3] (0.99ns) (grouped into DSP with root node add_ln840_1)   --->   "%mul_ln1494_3 = mul i16 %zext_ln186_6, i16 %zext_ln31_7"   --->   Operation 90 'mul' 'mul_ln1494_3' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.64>
ST_4 : Operation 91 [1/3] (0.00ns) (grouped into DSP with root node add_ln840)   --->   "%mul_ln1494 = mul i16 %zext_ln186, i16 %zext_ln31_1"   --->   Operation 91 'mul' 'mul_ln1494' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 92 [1/1] (0.00ns) (grouped into DSP with root node add_ln840)   --->   "%zext_ln35 = zext i16 %mul_ln1494" [matmul.cpp:35]   --->   Operation 92 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i16 %mul_ln1494_1" [matmul.cpp:35]   --->   Operation 93 'zext' 'zext_ln35_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i16 %mul_ln1494_2" [matmul.cpp:35]   --->   Operation 94 'zext' 'zext_ln35_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 95 [1/3] (0.00ns) (grouped into DSP with root node add_ln840_1)   --->   "%mul_ln1494_3 = mul i16 %zext_ln186_6, i16 %zext_ln31_7"   --->   Operation 95 'mul' 'mul_ln1494_3' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 96 [1/1] (0.00ns) (grouped into DSP with root node add_ln840_1)   --->   "%zext_ln840 = zext i16 %mul_ln1494_3"   --->   Operation 96 'zext' 'zext_ln840' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln840 = add i17 %zext_ln35_1, i17 %zext_ln35"   --->   Operation 97 'add' 'add_ln840' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 98 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln840_1 = add i17 %zext_ln35_2, i17 %zext_ln840"   --->   Operation 98 'add' 'add_ln840_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 112 'ret' 'ret_ln0' <Predicate = (icmp_ln31)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.03>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_31_5_VITIS_LOOP_32_6_str"   --->   Operation 99 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%empty_20 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 128, i64 128, i64 128"   --->   Operation 100 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 101 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%specloopname_ln33 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [matmul.cpp:33]   --->   Operation 102 'specloopname' 'specloopname_ln33' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln840 = add i17 %zext_ln35_1, i17 %zext_ln35"   --->   Operation 103 'add' 'add_ln840' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln840_1 = zext i17 %add_ln840"   --->   Operation 104 'zext' 'zext_ln840_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln840_1 = add i17 %zext_ln35_2, i17 %zext_ln840"   --->   Operation 105 'add' 'add_ln840_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln840_2 = zext i17 %add_ln840_1"   --->   Operation 106 'zext' 'zext_ln840_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.79ns)   --->   "%add_ln840_2 = add i18 %zext_ln840_2, i18 %zext_ln840_1"   --->   Operation 107 'add' 'add_ln840_2' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i7 %add_ln37" [matmul.cpp:37]   --->   Operation 108 'zext' 'zext_ln37' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%C_V_addr = getelementptr i18 %C_V, i64 0, i64 %zext_ln37" [matmul.cpp:37]   --->   Operation 109 'getelementptr' 'C_V_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.60ns)   --->   "%store_ln37 = store i18 %add_ln840_2, i7 %C_V_addr" [matmul.cpp:37]   --->   Operation 110 'store' 'store_ln37' <Predicate = true> <Delay = 0.60> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.60> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 18> <Depth = 128> <RAM>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%br_ln32 = br void %VITIS_LOOP_34_7" [matmul.cpp:32]   --->   Operation 111 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.01ns
The critical path consists of the following:
	'alloca' operation ('j') [4]  (0 ns)
	'load' operation ('j_load', matmul.cpp:32) on local variable 'j' [21]  (0 ns)
	'icmp' operation ('icmp_ln32', matmul.cpp:32) [24]  (0.637 ns)
	'select' operation ('select_ln31', matmul.cpp:31) [25]  (0.278 ns)
	'add' operation ('add_ln32', matmul.cpp:32) [91]  (0.707 ns)
	'store' operation ('store_ln32', matmul.cpp:32) of variable 'add_ln32', matmul.cpp:32 on local variable 'j' [94]  (0.387 ns)

 <State 2>: 2.22ns
The critical path consists of the following:
	'load' operation ('A_V_load_1', matmul.cpp:31) on array 'A_V' [40]  (0.667 ns)
	'mul' operation ('mul_ln1494_1') [66]  (1.55 ns)

 <State 3>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[82] ('mul_ln1494') [59]  (0.996 ns)

 <State 4>: 0.645ns
The critical path consists of the following:
	'mul' operation of DSP[82] ('mul_ln1494') [59]  (0 ns)
	'add' operation of DSP[82] ('add_ln840') [82]  (0.645 ns)

 <State 5>: 2.04ns
The critical path consists of the following:
	'add' operation of DSP[82] ('add_ln840') [82]  (0.645 ns)
	'add' operation ('add_ln840_2') [86]  (0.791 ns)
	'store' operation ('store_ln37', matmul.cpp:37) of variable 'add_ln840_2' on array 'C_V' [90]  (0.6 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
