--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                   Line: 214, Column: 67 }
Function:        _ZN11ap_int_baseILi32ELb0EEC2Ei
Args:            
  - String:          'Inlining function '''
  - Callee:          'ssdm_int<32, false>::ssdm_int(unsigned int)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_common.h', 
                       Line: 523, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_int_base<32, false>::ap_int_base(int)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 214, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
Function:        _ZN7ap_uintILi32EEC2Ei
Args:            
  - String:          'Inlining function '''
  - Callee:          'ap_int_base<32, false>::ap_int_base(int)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 214, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_uint<32>::ap_uint(int)'
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                   Line: 185, Column: 106 }
Function:        _ZN11ap_int_baseILi16ELb0EEC2ILi8ELb0EEERKS_IXT_EXT0_EE
Args:            
  - String:          'Inlining function '''
  - Callee:          'ssdm_int<16, false>::ssdm_int(unsigned short)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_common.h', 
                       Line: 523, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 185, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                   Line: 214, Column: 67 }
Function:        _ZN11ap_int_baseILi16ELb0EEC2Ei
Args:            
  - String:          'Inlining function '''
  - Callee:          'ssdm_int<16, false>::ssdm_int(unsigned short)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_common.h', 
                       Line: 523, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_int_base<16, false>::ap_int_base(int)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 214, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                   Line: 1494, Column: 339 }
Function:        _ZmlILi8ELb0ELi8ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT1_EXT2_EE4multERKS1_RKS0_IXT1_EXT2_EE
Args:            
  - String:          'Inlining function '''
  - Callee:          'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 185, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 1494, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                   Line: 1494, Column: 516 }
Function:        _ZmlILi8ELb0ELi8ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT1_EXT2_EE4multERKS1_RKS0_IXT1_EXT2_EE
Args:            
  - String:          'Inlining function '''
  - Callee:          'ap_int_base<16, false>::ap_int_base(int)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 214, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 1494, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                   Line: 1494, Column: 427 }
Function:        _ZmlILi8ELb0ELi8ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT1_EXT2_EE4multERKS1_RKS0_IXT1_EXT2_EE
Args:            
  - String:          'Inlining function '''
  - Callee:          'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 185, Column: 0 }
  - String:          ''' into '''
  - Caller:          'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 1494, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: matmul.cpp, Line: 35, Column: 12 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Inlining function '''
  - Callee:          'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 840, Column: 0 }
  - String:          ''' into '''
  - Caller:          'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: matmul.cpp, Line: 35, Column: 35 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Inlining function '''
  - Callee:          'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h', 
                       Line: 1494, Column: 0 }
  - String:          ''' into '''
  - Caller:          'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: matmul.cpp, Line: 17, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '32'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ OldID='
  - String:          for.inc.load.7
  - String:          ', '
  - String:          ' _XLX_SEP_ '
  - AccessID:        in1seq
  - String:          ' '
  - ArrayName:       in1
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_17_1
  - String:          ' '
  - LoopLoc:         'matmul.cpp:17:22'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: matmul.cpp, Line: 24, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '64'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ OldID='
  - String:          for.inc46.load.7
  - String:          ', '
  - String:          ' _XLX_SEP_ '
  - AccessID:        in2seq
  - String:          ' '
  - ArrayName:       in2
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_24_3
  - String:          ' '
  - LoopLoc:         'matmul.cpp:24:22'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: matmul.cpp, Line: 42, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of length '
  - Length:          '128'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ OldID='
  - String:          for.inc105.store.8
  - String:          ', '
  - String:          ' _XLX_SEP_ '
  - AccessID:        out_rseq
  - String:          ' '
  - ArrayName:       out_r
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_42_8
  - String:          ' '
  - LoopLoc:         'matmul.cpp:42:22'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: matmul.cpp, Line: 42, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Could not widen since type '
  - Type:            i32
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - AccessID:        out_rseq
  - String:          ' '
  - ArrayName:       out_r
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_43_9
  - String:          ' '
  - LoopLoc:         'matmul.cpp:43:23'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: matmul.cpp, Line: 24, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - AccessID:        in2seq
  - String:          ' '
  - ArrayName:       in2
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_25_4
  - String:          ' '
  - LoopLoc:         'matmul.cpp:25:23'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: matmul.cpp, Line: 17, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - AccessID:        in1seq
  - String:          ' '
  - ArrayName:       in1
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_18_2
  - String:          ' '
  - LoopLoc:         'matmul.cpp:18:23'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-supported-subset
Name:            MismatchPortAndBurstAccessWidth
DebugLoc:        { File: matmul.cpp, Line: 17, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          Inferred burst reverted due to burst accesses data width is different from m_axi port width
  - String:          ' _XLX_SEP_ '
  - AccessID:        in1seq
  - String:          ' '
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      in1
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-supported-subset
Name:            MismatchPortAndBurstAccessWidth
DebugLoc:        { File: matmul.cpp, Line: 24, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          Inferred burst reverted due to burst accesses data width is different from m_axi port width
  - String:          ' _XLX_SEP_ '
  - AccessID:        in2seq
  - String:          ' '
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      in2
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: matmul.cpp, Line: 42, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '128'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - String:          ' '
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_42_8
  - String:          ' '
  - LoopLoc:         'matmul.cpp:42:22'
  - String:          ' '
  - Function:        'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)'
    DebugLoc:        { File: matmul.cpp, Line: 7, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: matmul.cpp, Line: 42, Column: 22 }
Function:        _Z7mult_hwP7ap_uintILi8EES1_PS_ILi32EE
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '128'
  - String:          ' and bit width '
  - Width:           '32'
  - String:          ' in loop '''
  - LoopName:        VITIS_LOOP_42_8
  - String:          '''('
  - LoopLoc:         'matmul.cpp:42:22'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
