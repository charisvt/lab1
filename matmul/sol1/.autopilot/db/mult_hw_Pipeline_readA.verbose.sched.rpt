

================================================================
== Vitis HLS Report for 'mult_hw_Pipeline_readA'
================================================================
* Date:           Fri Nov 22 18:58:54 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        matmul
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     4106|     4106|  41.060 us|  41.060 us|  4106|  4106|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- readA   |     4104|     4104|        10|          1|          1|  4096|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.14>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 13 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 14 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%itr = alloca i32 1"   --->   Operation 15 'alloca' 'itr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 4096, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %trunc_ln"   --->   Operation 17 'read' 'trunc_ln_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%in1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in1"   --->   Operation 18 'read' 'in1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.38ns)   --->   "%store_ln0 = store i13 0, i13 %itr"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 20 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %i"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %j"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 22 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%itr_1 = load i13 %itr" [matmul.cpp:31]   --->   Operation 23 'load' 'itr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem0"   --->   Operation 24 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 25 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.64ns)   --->   "%icmp_ln25 = icmp_eq  i13 %itr_1, i13 4096" [matmul.cpp:25]   --->   Operation 26 'icmp' 'icmp_ln25' <Predicate = true> <Delay = 0.64> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.75ns)   --->   "%add_ln25 = add i13 %itr_1, i13 1" [matmul.cpp:25]   --->   Operation 27 'add' 'add_ln25' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %icmp_ln25, void %for.body.split, void %readB.exitStub" [matmul.cpp:25]   --->   Operation 28 'br' 'br_ln25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%itr_cast = zext i13 %itr_1" [matmul.cpp:31]   --->   Operation 29 'zext' 'itr_cast' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln31_2 = trunc i13 %itr_1" [matmul.cpp:31]   --->   Operation 30 'trunc' 'trunc_ln31_2' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.14ns)   --->   "%add_ln31_1 = add i64 %itr_cast, i64 %in1_read" [matmul.cpp:31]   --->   Operation 31 'add' 'add_ln31_1' <Predicate = (!icmp_ln25)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln31_4 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln31_1, i32 2, i32 63" [matmul.cpp:31]   --->   Operation 32 'partselect' 'trunc_ln31_4' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%sext_ln31 = sext i62 %trunc_ln31_4" [matmul.cpp:31]   --->   Operation 33 'sext' 'sext_ln31' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%gmem0_addr = getelementptr i32 %gmem0, i64 %sext_ln31" [matmul.cpp:31]   --->   Operation 34 'getelementptr' 'gmem0_addr' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.43ns)   --->   "%add_ln31_2 = add i2 %trunc_ln31_2, i2 %trunc_ln_read" [matmul.cpp:31]   --->   Operation 35 'add' 'add_ln31_2' <Predicate = (!icmp_ln25)> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.38ns)   --->   "%store_ln25 = store i13 %add_ln25, i13 %itr" [matmul.cpp:25]   --->   Operation 36 'store' 'store_ln25' <Predicate = (!icmp_ln25)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 37 [7/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 37 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 38 [6/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 38 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 39 [5/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 39 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 40 [4/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 40 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 41 [3/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 41 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 42 [2/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 42 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 43 [1/7] (7.30ns)   --->   "%gmem0_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %gmem0_addr, i32 1" [matmul.cpp:31]   --->   Operation 43 'readreq' 'gmem0_load_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 44 [1/1] (7.30ns)   --->   "%gmem0_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %gmem0_addr" [matmul.cpp:31]   --->   Operation 44 'read' 'gmem0_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 117 'ret' 'ret_ln0' <Predicate = (icmp_ln25)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 2.47>
ST_10 : Operation 45 [1/1] (0.00ns)   --->   "%j_load = load i32 %j" [matmul.cpp:27]   --->   Operation 45 'load' 'j_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 46 [1/1] (0.00ns)   --->   "%i_load = load i32 %i" [matmul.cpp:29]   --->   Operation 46 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "%speclooptripcount_ln26 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 4096, i64 4096, i64 4096" [matmul.cpp:26]   --->   Operation 47 'speclooptripcount' 'speclooptripcount_ln26' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 48 [1/1] (0.00ns)   --->   "%specloopname_ln25 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [matmul.cpp:25]   --->   Operation 48 'specloopname' 'specloopname_ln25' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 49 [1/1] (0.85ns)   --->   "%icmp_ln27 = icmp_eq  i32 %j_load, i32 64" [matmul.cpp:27]   --->   Operation 49 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 50 [1/1] (0.88ns)   --->   "%add_ln29 = add i32 %i_load, i32 1" [matmul.cpp:29]   --->   Operation 50 'add' 'add_ln29' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 51 [1/1] (0.22ns)   --->   "%j_1 = select i1 %icmp_ln27, i32 0, i32 %j_load" [matmul.cpp:27]   --->   Operation 51 'select' 'j_1' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln27 = trunc i32 %j_1" [matmul.cpp:27]   --->   Operation 52 'trunc' 'trunc_ln27' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 53 [1/1] (0.22ns)   --->   "%i_2 = select i1 %icmp_ln27, i32 %add_ln29, i32 %i_load" [matmul.cpp:27]   --->   Operation 53 'select' 'i_2' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i32 %i_2" [matmul.cpp:31]   --->   Operation 54 'trunc' 'trunc_ln31' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 55 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i6.i6, i6 %trunc_ln31, i6 0" [matmul.cpp:31]   --->   Operation 55 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = trunc i32 %j_1" [matmul.cpp:31]   --->   Operation 56 'trunc' 'trunc_ln31_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 57 [1/1] (0.74ns)   --->   "%add_ln31 = add i12 %shl_ln, i12 %trunc_ln27" [matmul.cpp:31]   --->   Operation 57 'add' 'add_ln31' <Predicate = true> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 58 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i8 @_ssdm_op_PartSelect.i8.i12.i32.i32, i12 %add_ln31, i32 4, i32 11" [matmul.cpp:31]   --->   Operation 58 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i8 %lshr_ln" [matmul.cpp:31]   --->   Operation 59 'zext' 'zext_ln31' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 60 [1/1] (0.00ns)   --->   "%A_V_addr = getelementptr i8 %A_V, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 60 'getelementptr' 'A_V_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 61 [1/1] (0.00ns)   --->   "%A_V_1_addr = getelementptr i8 %A_V_1, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 61 'getelementptr' 'A_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 62 [1/1] (0.00ns)   --->   "%A_V_2_addr = getelementptr i8 %A_V_2, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 62 'getelementptr' 'A_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 63 [1/1] (0.00ns)   --->   "%A_V_3_addr = getelementptr i8 %A_V_3, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 63 'getelementptr' 'A_V_3_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 64 [1/1] (0.00ns)   --->   "%A_V_4_addr = getelementptr i8 %A_V_4, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 64 'getelementptr' 'A_V_4_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 65 [1/1] (0.00ns)   --->   "%A_V_5_addr = getelementptr i8 %A_V_5, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 65 'getelementptr' 'A_V_5_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 66 [1/1] (0.00ns)   --->   "%A_V_6_addr = getelementptr i8 %A_V_6, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 66 'getelementptr' 'A_V_6_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 67 [1/1] (0.00ns)   --->   "%A_V_7_addr = getelementptr i8 %A_V_7, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 67 'getelementptr' 'A_V_7_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 68 [1/1] (0.00ns)   --->   "%A_V_8_addr = getelementptr i8 %A_V_8, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 68 'getelementptr' 'A_V_8_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 69 [1/1] (0.00ns)   --->   "%A_V_9_addr = getelementptr i8 %A_V_9, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 69 'getelementptr' 'A_V_9_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 70 [1/1] (0.00ns)   --->   "%A_V_10_addr = getelementptr i8 %A_V_10, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 70 'getelementptr' 'A_V_10_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%A_V_11_addr = getelementptr i8 %A_V_11, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 71 'getelementptr' 'A_V_11_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%A_V_12_addr = getelementptr i8 %A_V_12, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 72 'getelementptr' 'A_V_12_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 73 [1/1] (0.00ns)   --->   "%A_V_13_addr = getelementptr i8 %A_V_13, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 73 'getelementptr' 'A_V_13_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%A_V_14_addr = getelementptr i8 %A_V_14, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 74 'getelementptr' 'A_V_14_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%A_V_15_addr = getelementptr i8 %A_V_15, i64 0, i64 %zext_ln31" [matmul.cpp:31]   --->   Operation 75 'getelementptr' 'A_V_15_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%shl_ln31_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %add_ln31_2, i3 0" [matmul.cpp:31]   --->   Operation 76 'bitconcatenate' 'shl_ln31_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln31_1 = zext i5 %shl_ln31_1" [matmul.cpp:31]   --->   Operation 77 'zext' 'zext_ln31_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (1.05ns)   --->   "%lshr_ln31 = lshr i32 %gmem0_addr_read, i32 %zext_ln31_1" [matmul.cpp:31]   --->   Operation 78 'lshr' 'lshr_ln31' <Predicate = true> <Delay = 1.05> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%trunc_ln31_3 = trunc i32 %lshr_ln31" [matmul.cpp:31]   --->   Operation 79 'trunc' 'trunc_ln31_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.34ns)   --->   "%switch_ln31 = switch i4 %trunc_ln31_1, void %arrayidx19.case.15, i4 0, void %arrayidx19.case.0, i4 1, void %arrayidx19.case.1, i4 2, void %arrayidx19.case.2, i4 3, void %arrayidx19.case.3, i4 4, void %arrayidx19.case.4, i4 5, void %arrayidx19.case.5, i4 6, void %arrayidx19.case.6, i4 7, void %arrayidx19.case.7, i4 8, void %arrayidx19.case.8, i4 9, void %arrayidx19.case.9, i4 10, void %arrayidx19.case.10, i4 11, void %arrayidx19.case.11, i4 12, void %arrayidx19.case.12, i4 13, void %arrayidx19.case.13, i4 14, void %arrayidx19.case.14" [matmul.cpp:31]   --->   Operation 80 'switch' 'switch_ln31' <Predicate = true> <Delay = 0.34>
ST_10 : Operation 81 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_14_addr" [matmul.cpp:31]   --->   Operation 81 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 14)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 82 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 14)> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_13_addr" [matmul.cpp:31]   --->   Operation 83 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 13)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 84 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 13)> <Delay = 0.00>
ST_10 : Operation 85 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_12_addr" [matmul.cpp:31]   --->   Operation 85 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 12)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 86 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 12)> <Delay = 0.00>
ST_10 : Operation 87 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_11_addr" [matmul.cpp:31]   --->   Operation 87 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 11)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 88 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 11)> <Delay = 0.00>
ST_10 : Operation 89 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_10_addr" [matmul.cpp:31]   --->   Operation 89 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 10)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 90 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 90 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 10)> <Delay = 0.00>
ST_10 : Operation 91 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_9_addr" [matmul.cpp:31]   --->   Operation 91 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 9)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 92 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 9)> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_8_addr" [matmul.cpp:31]   --->   Operation 93 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 8)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 94 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 8)> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_7_addr" [matmul.cpp:31]   --->   Operation 95 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 7)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 96 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 7)> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_6_addr" [matmul.cpp:31]   --->   Operation 97 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 6)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 98 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 6)> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_5_addr" [matmul.cpp:31]   --->   Operation 99 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 5)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 100 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 5)> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_4_addr" [matmul.cpp:31]   --->   Operation 101 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 4)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 102 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 4)> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_3_addr" [matmul.cpp:31]   --->   Operation 103 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 3)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 104 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 104 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 3)> <Delay = 0.00>
ST_10 : Operation 105 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_2_addr" [matmul.cpp:31]   --->   Operation 105 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 2)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 106 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 2)> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_1_addr" [matmul.cpp:31]   --->   Operation 107 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 1)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 108 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 1)> <Delay = 0.00>
ST_10 : Operation 109 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_addr" [matmul.cpp:31]   --->   Operation 109 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 0)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 110 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 0)> <Delay = 0.00>
ST_10 : Operation 111 [1/1] (0.62ns)   --->   "%store_ln31 = store i8 %trunc_ln31_3, i8 %A_V_15_addr" [matmul.cpp:31]   --->   Operation 111 'store' 'store_ln31' <Predicate = (trunc_ln31_1 == 15)> <Delay = 0.62> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 256> <RAM>
ST_10 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln31 = br void %arrayidx19.exit" [matmul.cpp:31]   --->   Operation 112 'br' 'br_ln31' <Predicate = (trunc_ln31_1 == 15)> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (0.88ns)   --->   "%j_2 = add i32 %j_1, i32 1" [matmul.cpp:25]   --->   Operation 113 'add' 'j_2' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 114 [1/1] (0.38ns)   --->   "%store_ln25 = store i32 %i_2, i32 %i" [matmul.cpp:25]   --->   Operation 114 'store' 'store_ln25' <Predicate = true> <Delay = 0.38>
ST_10 : Operation 115 [1/1] (0.38ns)   --->   "%store_ln25 = store i32 %j_2, i32 %j" [matmul.cpp:25]   --->   Operation 115 'store' 'store_ln25' <Predicate = true> <Delay = 0.38>
ST_10 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln25 = br void %for.body" [matmul.cpp:25]   --->   Operation 116 'br' 'br_ln25' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.15ns
The critical path consists of the following:
	'alloca' operation ('itr') [22]  (0 ns)
	'load' operation ('itr', matmul.cpp:31) on local variable 'itr' [31]  (0 ns)
	'add' operation ('add_ln31_1', matmul.cpp:31) [71]  (1.15 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem0_load_req', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [75]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem0_addr_read', matmul.cpp:31) on port 'gmem0' (matmul.cpp:31) [76]  (7.3 ns)

 <State 10>: 2.48ns
The critical path consists of the following:
	'load' operation ('i_load', matmul.cpp:29) on local variable 'i' [39]  (0 ns)
	'add' operation ('add_ln29', matmul.cpp:29) [44]  (0.88 ns)
	'select' operation ('i', matmul.cpp:27) [47]  (0.227 ns)
	'add' operation ('add_ln31', matmul.cpp:31) [51]  (0.745 ns)
	'getelementptr' operation ('A_V_12_addr', matmul.cpp:31) [66]  (0 ns)
	'store' operation ('store_ln31', matmul.cpp:31) of variable 'trunc_ln31_3', matmul.cpp:31 on array 'A_V_12' [90]  (0.626 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
