

================================================================
== Vitis HLS Report for 'mult_hw'
================================================================
* Date:           Fri Nov 22 21:50:15 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        matmul
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    12324|    12324|  0.123 ms|  0.123 ms|  12325|  12325|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 20 [1/1] (1.00ns)   --->   "%out_r_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out_r"   --->   Operation 20 'read' 'out_r_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%in2_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %in2"   --->   Operation 21 'read' 'in2_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 22 [1/1] (1.00ns)   --->   "%in1_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %in1"   --->   Operation 22 'read' 'in1_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%A_V = alloca i64 1" [matmul.cpp:13]   --->   Operation 23 'alloca' 'A_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%A_V_1 = alloca i64 1" [matmul.cpp:13]   --->   Operation 24 'alloca' 'A_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%A_V_2 = alloca i64 1" [matmul.cpp:13]   --->   Operation 25 'alloca' 'A_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%A_V_3 = alloca i64 1" [matmul.cpp:13]   --->   Operation 26 'alloca' 'A_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%A_V_4 = alloca i64 1" [matmul.cpp:13]   --->   Operation 27 'alloca' 'A_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%A_V_5 = alloca i64 1" [matmul.cpp:13]   --->   Operation 28 'alloca' 'A_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%A_V_6 = alloca i64 1" [matmul.cpp:13]   --->   Operation 29 'alloca' 'A_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%A_V_7 = alloca i64 1" [matmul.cpp:13]   --->   Operation 30 'alloca' 'A_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%A_V_8 = alloca i64 1" [matmul.cpp:13]   --->   Operation 31 'alloca' 'A_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%A_V_9 = alloca i64 1" [matmul.cpp:13]   --->   Operation 32 'alloca' 'A_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%A_V_10 = alloca i64 1" [matmul.cpp:13]   --->   Operation 33 'alloca' 'A_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%A_V_11 = alloca i64 1" [matmul.cpp:13]   --->   Operation 34 'alloca' 'A_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%A_V_12 = alloca i64 1" [matmul.cpp:13]   --->   Operation 35 'alloca' 'A_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%A_V_13 = alloca i64 1" [matmul.cpp:13]   --->   Operation 36 'alloca' 'A_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%A_V_14 = alloca i64 1" [matmul.cpp:13]   --->   Operation 37 'alloca' 'A_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%A_V_15 = alloca i64 1" [matmul.cpp:13]   --->   Operation 38 'alloca' 'A_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%B_V = alloca i64 1" [matmul.cpp:14]   --->   Operation 39 'alloca' 'B_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%B_V_1 = alloca i64 1" [matmul.cpp:14]   --->   Operation 40 'alloca' 'B_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%B_V_2 = alloca i64 1" [matmul.cpp:14]   --->   Operation 41 'alloca' 'B_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%B_V_3 = alloca i64 1" [matmul.cpp:14]   --->   Operation 42 'alloca' 'B_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%B_V_4 = alloca i64 1" [matmul.cpp:14]   --->   Operation 43 'alloca' 'B_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%B_V_5 = alloca i64 1" [matmul.cpp:14]   --->   Operation 44 'alloca' 'B_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%B_V_6 = alloca i64 1" [matmul.cpp:14]   --->   Operation 45 'alloca' 'B_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%B_V_7 = alloca i64 1" [matmul.cpp:14]   --->   Operation 46 'alloca' 'B_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%B_V_8 = alloca i64 1" [matmul.cpp:14]   --->   Operation 47 'alloca' 'B_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%B_V_9 = alloca i64 1" [matmul.cpp:14]   --->   Operation 48 'alloca' 'B_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%B_V_10 = alloca i64 1" [matmul.cpp:14]   --->   Operation 49 'alloca' 'B_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%B_V_11 = alloca i64 1" [matmul.cpp:14]   --->   Operation 50 'alloca' 'B_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%B_V_12 = alloca i64 1" [matmul.cpp:14]   --->   Operation 51 'alloca' 'B_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%B_V_13 = alloca i64 1" [matmul.cpp:14]   --->   Operation 52 'alloca' 'B_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%B_V_14 = alloca i64 1" [matmul.cpp:14]   --->   Operation 53 'alloca' 'B_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%B_V_15 = alloca i64 1" [matmul.cpp:14]   --->   Operation 54 'alloca' 'B_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%C_V = alloca i64 1" [matmul.cpp:15]   --->   Operation 55 'alloca' 'C_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i64 %in1_read" [matmul.cpp:31]   --->   Operation 56 'trunc' 'trunc_ln31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %out_r_read, i32 2, i32 63" [matmul.cpp:60]   --->   Operation 57 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i8 %gmem, i64 %in2_read" [matmul.cpp:36]   --->   Operation 58 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [7/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 59 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 60 [6/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 60 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 61 [5/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 61 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 62 [4/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 62 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 63 [3/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 63 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 64 [2/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 64 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 65 [1/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %gmem_addr, i32 4096" [matmul.cpp:36]   --->   Operation 65 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 1.14>
ST_9 : Operation 66 [2/2] (1.14ns)   --->   "%call_ln31 = call void @mult_hw_Pipeline_readA, i32 %gmem0, i8 %A_V, i8 %A_V_1, i8 %A_V_2, i8 %A_V_3, i8 %A_V_4, i8 %A_V_5, i8 %A_V_6, i8 %A_V_7, i8 %A_V_8, i8 %A_V_9, i8 %A_V_10, i8 %A_V_11, i8 %A_V_12, i8 %A_V_13, i8 %A_V_14, i8 %A_V_15, i64 %in1_read, i2 %trunc_ln31" [matmul.cpp:31]   --->   Operation 66 'call' 'call_ln31' <Predicate = true> <Delay = 1.14> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 67 [2/2] (0.00ns)   --->   "%call_ln0 = call void @mult_hw_Pipeline_readB, i8 %gmem, i64 %in2_read, i8 %B_V, i8 %B_V_1, i8 %B_V_2, i8 %B_V_3, i8 %B_V_4, i8 %B_V_5, i8 %B_V_6, i8 %B_V_7, i8 %B_V_8, i8 %B_V_9, i8 %B_V_10, i8 %B_V_11, i8 %B_V_12, i8 %B_V_13, i8 %B_V_14, i8 %B_V_15"   --->   Operation 67 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 68 [1/2] (0.00ns)   --->   "%call_ln31 = call void @mult_hw_Pipeline_readA, i32 %gmem0, i8 %A_V, i8 %A_V_1, i8 %A_V_2, i8 %A_V_3, i8 %A_V_4, i8 %A_V_5, i8 %A_V_6, i8 %A_V_7, i8 %A_V_8, i8 %A_V_9, i8 %A_V_10, i8 %A_V_11, i8 %A_V_12, i8 %A_V_13, i8 %A_V_14, i8 %A_V_15, i64 %in1_read, i2 %trunc_ln31" [matmul.cpp:31]   --->   Operation 68 'call' 'call_ln31' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 69 [1/2] (0.00ns)   --->   "%call_ln0 = call void @mult_hw_Pipeline_readB, i8 %gmem, i64 %in2_read, i8 %B_V, i8 %B_V_1, i8 %B_V_2, i8 %B_V_3, i8 %B_V_4, i8 %B_V_5, i8 %B_V_6, i8 %B_V_7, i8 %B_V_8, i8 %B_V_9, i8 %B_V_10, i8 %B_V_11, i8 %B_V_12, i8 %B_V_13, i8 %B_V_14, i8 %B_V_15"   --->   Operation 69 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 70 [2/2] (0.00ns)   --->   "%call_ln0 = call void @mult_hw_Pipeline_mult_outer_mult_middle, i8 %A_V, i8 %A_V_1, i8 %A_V_2, i8 %A_V_3, i8 %A_V_4, i8 %A_V_5, i8 %A_V_6, i8 %A_V_7, i8 %A_V_8, i8 %A_V_9, i8 %A_V_10, i8 %A_V_11, i8 %A_V_12, i8 %A_V_13, i8 %A_V_14, i8 %A_V_15, i8 %B_V, i8 %B_V_1, i8 %B_V_2, i8 %B_V_3, i8 %B_V_4, i8 %B_V_5, i8 %B_V_6, i8 %B_V_7, i8 %B_V_8, i8 %B_V_9, i8 %B_V_10, i8 %B_V_11, i8 %B_V_12, i8 %B_V_13, i8 %B_V_14, i8 %B_V_15, i22 %C_V"   --->   Operation 70 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 71 [1/2] (0.00ns)   --->   "%call_ln0 = call void @mult_hw_Pipeline_mult_outer_mult_middle, i8 %A_V, i8 %A_V_1, i8 %A_V_2, i8 %A_V_3, i8 %A_V_4, i8 %A_V_5, i8 %A_V_6, i8 %A_V_7, i8 %A_V_8, i8 %A_V_9, i8 %A_V_10, i8 %A_V_11, i8 %A_V_12, i8 %A_V_13, i8 %A_V_14, i8 %A_V_15, i8 %B_V, i8 %B_V_1, i8 %B_V_2, i8 %B_V_3, i8 %B_V_4, i8 %B_V_5, i8 %B_V_6, i8 %B_V_7, i8 %B_V_8, i8 %B_V_9, i8 %B_V_10, i8 %B_V_11, i8 %B_V_12, i8 %B_V_13, i8 %B_V_14, i8 %B_V_15, i22 %C_V"   --->   Operation 71 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i62 %trunc_ln3" [matmul.cpp:60]   --->   Operation 72 'sext' 'sext_ln60' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 73 [1/1] (0.00ns)   --->   "%gmem0_addr = getelementptr i32 %gmem0, i64 %sext_ln60" [matmul.cpp:60]   --->   Operation 73 'getelementptr' 'gmem0_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 74 [1/1] (7.30ns)   --->   "%empty_31 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem0_addr, i32 4096" [matmul.cpp:60]   --->   Operation 74 'writereq' 'empty_31' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 75 [2/2] (0.00ns)   --->   "%call_ln60 = call void @mult_hw_Pipeline_writeC, i32 %gmem0, i62 %trunc_ln3, i22 %C_V" [matmul.cpp:60]   --->   Operation 75 'call' 'call_ln60' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 76 [1/2] (0.00ns)   --->   "%call_ln60 = call void @mult_hw_Pipeline_writeC, i32 %gmem0, i62 %trunc_ln3, i22 %C_V" [matmul.cpp:60]   --->   Operation 76 'call' 'call_ln60' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 77 [5/5] (7.30ns)   --->   "%empty_32 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem0_addr" [matmul.cpp:64]   --->   Operation 77 'writeresp' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 78 [4/5] (7.30ns)   --->   "%empty_32 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem0_addr" [matmul.cpp:64]   --->   Operation 78 'writeresp' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 79 [3/5] (7.30ns)   --->   "%empty_32 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem0_addr" [matmul.cpp:64]   --->   Operation 79 'writeresp' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 80 [2/5] (7.30ns)   --->   "%empty_32 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem0_addr" [matmul.cpp:64]   --->   Operation 80 'writeresp' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 81 [1/1] (0.00ns)   --->   "%spectopmodule_ln7 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_11" [matmul.cpp:7]   --->   Operation 81 'spectopmodule' 'spectopmodule_ln7' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 82 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 4096, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 82 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 83 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem0"   --->   Operation 83 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 84 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 4096, void @empty_3, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 84 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 85 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %gmem"   --->   Operation 85 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 86 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %in1, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_6, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7, i32 4294967295, i32 0"   --->   Operation 86 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 87 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %in1, void @empty_8, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7, i32 4294967295, i32 0"   --->   Operation 87 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 88 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %in2, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_9, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7, i32 4294967295, i32 0"   --->   Operation 88 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 89 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %in2, void @empty_8, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7, i32 4294967295, i32 0"   --->   Operation 89 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 90 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out_r, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_10, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7, i32 4294967295, i32 0"   --->   Operation 90 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 91 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out_r, void @empty_8, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7, i32 4294967295, i32 0"   --->   Operation 91 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 92 [1/5] (7.30ns)   --->   "%empty_32 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem0_addr" [matmul.cpp:64]   --->   Operation 92 'writeresp' 'empty_32' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 93 [1/1] (0.00ns)   --->   "%ret_ln64 = ret" [matmul.cpp:64]   --->   Operation 93 'ret' 'ret_ln64' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read operation ('out_r_read') on port 'out_r' [17]  (1 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', matmul.cpp:36) [55]  (0 ns)
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', matmul.cpp:36) on port 'gmem' (matmul.cpp:36) [56]  (7.3 ns)

 <State 9>: 1.15ns
The critical path consists of the following:
	'call' operation ('call_ln31', matmul.cpp:31) to 'mult_hw_Pipeline_readA' [54]  (1.15 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem0_addr', matmul.cpp:60) [61]  (0 ns)
	bus request operation ('empty_31', matmul.cpp:60) on port 'gmem0' (matmul.cpp:60) [62]  (7.3 ns)

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_32', matmul.cpp:64) on port 'gmem0' (matmul.cpp:64) [64]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_32', matmul.cpp:64) on port 'gmem0' (matmul.cpp:64) [64]  (7.3 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_32', matmul.cpp:64) on port 'gmem0' (matmul.cpp:64) [64]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_32', matmul.cpp:64) on port 'gmem0' (matmul.cpp:64) [64]  (7.3 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_32', matmul.cpp:64) on port 'gmem0' (matmul.cpp:64) [64]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
