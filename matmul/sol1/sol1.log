==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.035 seconds; current allocated memory: 93.340 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.172 seconds; current allocated memory: 94.391 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:40)
INFO: [HLS 214-188] Unrolling loop 'readB' (matmul.cpp:35:3) in function 'mult_hw' partially with a factor of 4 (matmul.cpp:7:0)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:59:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:59:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.346 seconds; current allocated memory: 95.461 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.465 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 110.242 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.169 seconds; current allocated memory: 117.488 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:59) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' for pipelining.
WARNING: [XFORM 203-561] Updating loop upper bound from 256 to 1024 for loop 'readB' (matmul.cpp:35:11) in function 'mult_hw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 256 to 1024 for loop 'readB' (matmul.cpp:35:11) in function 'mult_hw'.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:48) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.199 seconds; current allocated memory: 149.816 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:43:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:38:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:53:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.343 seconds; current allocated memory: 186.746 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.265 seconds; current allocated memory: 192.164 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 193.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readB'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_2_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_3_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_4_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 4, Depth = 13, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.263 seconds; current allocated memory: 195.457 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 195.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_6_load_3') on array 'B_V_6' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'B_V_6'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_load_1') on array 'B_V' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'B_V'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 7, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.145 seconds; current allocated memory: 203.379 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.527 seconds; current allocated memory: 203.711 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.544 seconds; current allocated memory: 204.426 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 204.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 204.543 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 204.895 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.286 seconds; current allocated memory: 207.207 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 210.895 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.414 seconds; current allocated memory: 220.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.323 seconds; current allocated memory: 233.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 235.676 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.437 seconds; current allocated memory: 241.844 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.537 seconds; current allocated memory: 251.535 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 14.224 seconds; current allocated memory: 158.203 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.132 seconds; peak allocated memory: 251.590 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.503 seconds; current allocated memory: 10.387 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 30.411 seconds; peak allocated memory: 103.086 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.025 seconds; current allocated memory: 95.082 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.17 seconds; current allocated memory: 96.027 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:40)
INFO: [HLS 214-188] Unrolling loop 'readB' (matmul.cpp:35:3) in function 'mult_hw' partially with a factor of 2 (matmul.cpp:7:0)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:59:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:59:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.313 seconds; current allocated memory: 97.035 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 97.035 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 111.488 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 118.910 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:59) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' for pipelining.
WARNING: [XFORM 203-561] Updating loop upper bound from 1024 to 2048 for loop 'readB' (matmul.cpp:35:11) in function 'mult_hw'.
WARNING: [XFORM 203-561] Updating loop lower bound from 1024 to 2048 for loop 'readB' (matmul.cpp:35:11) in function 'mult_hw'.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:48) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.203 seconds; current allocated memory: 151.012 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:43:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:38:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:53:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.345 seconds; current allocated memory: 187.613 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.265 seconds; current allocated memory: 193.035 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.073 seconds; current allocated memory: 194.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readB'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_2_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 11, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.176 seconds; current allocated memory: 195.469 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 195.539 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_6_load_3') on array 'B_V_6' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'B_V_6'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_load_1') on array 'B_V' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'B_V'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 7, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.057 seconds; current allocated memory: 203.609 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.533 seconds; current allocated memory: 204.367 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.548 seconds; current allocated memory: 204.785 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 204.918 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 205.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 205.273 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 207.570 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 211.020 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.322 seconds; current allocated memory: 219.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.312 seconds; current allocated memory: 232.227 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 234.359 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.384 seconds; current allocated memory: 240.207 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.514 seconds; current allocated memory: 250.055 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 13.801 seconds; current allocated memory: 154.992 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 24.646 seconds; peak allocated memory: 250.109 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.673 seconds; current allocated memory: 11.477 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 30.524 seconds; peak allocated memory: 104.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.031 seconds; current allocated memory: 93.430 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.172 seconds; current allocated memory: 94.723 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:40)
INFO: [HLS 214-188] Unrolling loop 'readB' (matmul.cpp:35:3) in function 'mult_hw' partially with a factor of 2 (matmul.cpp:7:0)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:59:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:59:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.339 seconds; current allocated memory: 95.723 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.727 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 110.293 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 117.812 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:59) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:48) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.182 seconds; current allocated memory: 149.391 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:43:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:38:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:53:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.329 seconds; current allocated memory: 185.938 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.258 seconds; current allocated memory: 191.520 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 192.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readB'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_2_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 11, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 194.105 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.102 seconds; current allocated memory: 194.176 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_6_load_3') on array 'B_V_6' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'B_V_6'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_load_1') on array 'B_V' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'B_V'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 7, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.049 seconds; current allocated memory: 202.402 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.525 seconds; current allocated memory: 202.789 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.565 seconds; current allocated memory: 203.273 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.048 seconds; current allocated memory: 203.277 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.062 seconds; current allocated memory: 203.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.217 seconds; current allocated memory: 203.582 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.316 seconds; current allocated memory: 205.918 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.188 seconds; current allocated memory: 209.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.357 seconds; current allocated memory: 218.363 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.297 seconds; current allocated memory: 231.270 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 233.336 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.375 seconds; current allocated memory: 239.164 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.508 seconds; current allocated memory: 248.504 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 13.864 seconds; current allocated memory: 155.086 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 0 seconds. Total elapsed time: 24.731 seconds; peak allocated memory: 248.559 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.295 seconds; current allocated memory: 10.816 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 30.132 seconds; peak allocated memory: 104.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.037 seconds; current allocated memory: 92.699 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.269 seconds; current allocated memory: 93.617 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.491 seconds; current allocated memory: 94.809 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 94.840 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.213 seconds; current allocated memory: 109.711 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 116.801 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.326 seconds; current allocated memory: 148.746 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.389 seconds; current allocated memory: 184.816 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.322 seconds; current allocated memory: 190.402 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 191.672 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.239 seconds; current allocated memory: 192.352 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.076 seconds; current allocated memory: 192.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.144 seconds; current allocated memory: 199.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.538 seconds; current allocated memory: 199.879 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.612 seconds; current allocated memory: 200.328 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 200.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 200.984 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.235 seconds; current allocated memory: 201.152 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.303 seconds; current allocated memory: 203.234 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 206.793 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 215.773 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.422 seconds; current allocated memory: 228.453 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 232.617 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.5 seconds; current allocated memory: 238.008 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.576 seconds; current allocated memory: 248.125 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.948 seconds; current allocated memory: 155.441 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.807 seconds; peak allocated memory: 248.180 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.316 seconds; current allocated memory: 11.336 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.216 seconds; peak allocated memory: 103.707 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.028 seconds; current allocated memory: 94.512 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.154 seconds; current allocated memory: 95.941 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 512 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.269 seconds; current allocated memory: 97.102 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 97.117 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.115 seconds; current allocated memory: 110.672 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.117 seconds; current allocated memory: 118.156 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.134 seconds; current allocated memory: 150.344 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.253 seconds; current allocated memory: 184.746 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.306 seconds; current allocated memory: 190.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 191.859 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 192.691 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 192.691 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.969 seconds; current allocated memory: 199.863 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.504 seconds; current allocated memory: 200.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.548 seconds; current allocated memory: 201.086 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 201.207 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 201.559 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 201.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 204.227 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.182 seconds; current allocated memory: 207.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 217.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.292 seconds; current allocated memory: 229.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 233.793 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.41 seconds; current allocated memory: 239.973 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 249.398 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 13.362 seconds; current allocated memory: 154.895 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 0 seconds. Total elapsed time: 24.266 seconds; peak allocated memory: 249.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.952 seconds; current allocated memory: 10.137 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.779 seconds; peak allocated memory: 103.316 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.039 seconds; current allocated memory: 93.211 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.196 seconds; current allocated memory: 94.250 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.363 seconds; current allocated memory: 95.258 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.320 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.39 seconds; current allocated memory: 112.879 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.376 seconds; current allocated memory: 118.348 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.4 seconds; current allocated memory: 149.691 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.124 seconds; current allocated memory: 187.461 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.278 seconds; current allocated memory: 192.793 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 194.234 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.23 seconds; current allocated memory: 195.102 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.073 seconds; current allocated memory: 195.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.997 seconds; current allocated memory: 202.137 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.506 seconds; current allocated memory: 202.934 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.565 seconds; current allocated memory: 203.348 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 203.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 203.688 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 203.914 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.292 seconds; current allocated memory: 206.273 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 209.809 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.259 seconds; current allocated memory: 217.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.356 seconds; current allocated memory: 230.539 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 234.426 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.461 seconds; current allocated memory: 240.754 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.532 seconds; current allocated memory: 250.516 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 16.349 seconds; current allocated memory: 157.312 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.236 seconds; peak allocated memory: 250.570 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 22.686 seconds; current allocated memory: 10.246 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 33.543 seconds; peak allocated memory: 103.504 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.039 seconds; current allocated memory: 93.285 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.198 seconds; current allocated memory: 93.922 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.358 seconds; current allocated memory: 95.074 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.074 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.7 seconds; current allocated memory: 120.160 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.699 seconds; current allocated memory: 124.809 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.764 seconds; current allocated memory: 151.020 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_middle' (matmul.cpp:47:14) in function 'mult_hw'.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.646 seconds; current allocated memory: 186.594 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.157 seconds; current allocated memory: 191.414 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 192.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.132 seconds; current allocated memory: 193.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.073 seconds; current allocated memory: 193.480 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=ret_V) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle_mult_inner'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, loop 'mult_outer_mult_middle_mult_inner'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 195.016 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 195.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.173 seconds; current allocated memory: 195.715 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.036 seconds; current allocated memory: 195.812 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 196.102 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.189 seconds; current allocated memory: 196.414 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 198.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.185 seconds; current allocated memory: 201.812 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner' pipeline 'mult_outer_mult_middle_mult_inner' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_23ns_23_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 204.836 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.405 seconds; current allocated memory: 207.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 210.633 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.243 seconds; current allocated memory: 215.824 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.469 seconds; current allocated memory: 223.691 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 11.603 seconds; current allocated memory: 130.473 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 22.476 seconds; peak allocated memory: 223.746 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 293.62 seconds; current allocated memory: 10.711 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 304.483 seconds; peak allocated memory: 103.559 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.035 seconds; current allocated memory: 93.922 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.2 seconds; current allocated memory: 94.645 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.444 seconds; current allocated memory: 95.566 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.566 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.477 seconds; current allocated memory: 113.445 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.373 seconds; current allocated memory: 119.371 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.462 seconds; current allocated memory: 148.965 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_middle' (matmul.cpp:47:14) in function 'mult_hw'.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.63 seconds; current allocated memory: 183.770 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.154 seconds; current allocated memory: 188.859 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.081 seconds; current allocated memory: 190.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.148 seconds; current allocated memory: 190.953 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.089 seconds; current allocated memory: 191.066 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=ret_V) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle_mult_inner'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 6, loop 'mult_outer_mult_middle_mult_inner'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 192.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.133 seconds; current allocated memory: 192.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.162 seconds; current allocated memory: 193.012 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 193.012 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 193.465 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 193.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 195.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 199.176 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner' pipeline 'mult_outer_mult_middle_mult_inner' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_23ns_23_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle_mult_inner'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 202.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.405 seconds; current allocated memory: 204.832 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 207.949 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.214 seconds; current allocated memory: 213.422 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.449 seconds; current allocated memory: 220.352 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 10.766 seconds; current allocated memory: 126.449 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 21.687 seconds; peak allocated memory: 220.410 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 78.201 seconds; current allocated memory: 11.031 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 89.051 seconds; peak allocated memory: 104.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.029 seconds; current allocated memory: 93.180 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.229 seconds; current allocated memory: 94.316 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.408 seconds; current allocated memory: 95.516 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.516 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.217 seconds; current allocated memory: 109.938 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.221 seconds; current allocated memory: 117.305 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.246 seconds; current allocated memory: 148.316 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.372 seconds; current allocated memory: 185.195 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 190.598 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.086 seconds; current allocated memory: 191.832 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.227 seconds; current allocated memory: 192.727 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 192.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.012 seconds; current allocated memory: 200.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.513 seconds; current allocated memory: 200.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.566 seconds; current allocated memory: 200.961 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 201.035 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 201.402 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 201.652 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.287 seconds; current allocated memory: 203.973 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 207.242 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.265 seconds; current allocated memory: 216.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.327 seconds; current allocated memory: 228.996 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 232.891 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.45 seconds; current allocated memory: 238.863 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.527 seconds; current allocated memory: 248.801 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.162 seconds; current allocated memory: 155.637 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.063 seconds; peak allocated memory: 248.859 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.507 seconds; current allocated memory: 10.867 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.378 seconds; peak allocated memory: 103.027 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.041 seconds; current allocated memory: 93.391 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.227 seconds; current allocated memory: 94.074 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 16384 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.424 seconds; current allocated memory: 95.156 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.156 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.376 seconds; current allocated memory: 112.969 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.382 seconds; current allocated memory: 118.148 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.413 seconds; current allocated memory: 150.070 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.155 seconds; current allocated memory: 187.949 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.267 seconds; current allocated memory: 193.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 194.746 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 195.328 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 195.395 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize av==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.033 seconds; current allocated memory: 92.633 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.404 seconds; current allocated memory: 93.840 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.57 seconds; current allocated memory: 95.012 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.039 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 110.344 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.282 seconds; current allocated memory: 117.191 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.317 seconds; current allocated memory: 148.465 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.141 seconds; current allocated memory: 187.555 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 192.715 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 194.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 194.969 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 195.062 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.019 seconds; current allocated memory: 202.234 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.508 seconds; current allocated memory: 202.496 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.565 seconds; current allocated memory: 203.004 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 203.012 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.062 seconds; current allocated memory: 203.402 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 203.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.295 seconds; current allocated memory: 205.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.183 seconds; current allocated memory: 209.195 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 218.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.358 seconds; current allocated memory: 230.789 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.215 seconds; current allocated memory: 234.848 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.453 seconds; current allocated memory: 240.340 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.536 seconds; current allocated memory: 250.355 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 16.524 seconds; current allocated memory: 157.734 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.422 seconds; peak allocated memory: 250.410 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.04 seconds; current allocated memory: 93.934 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.18 seconds; current allocated memory: 94.828 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.374 seconds; current allocated memory: 96.039 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 96.039 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 110.156 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 117.719 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.252 seconds; current allocated memory: 149.402 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.362 seconds; current allocated memory: 185.363 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.256 seconds; current allocated memory: 190.934 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 192.141 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.221 seconds; current allocated memory: 192.992 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 193.051 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.022 seconds; current allocated memory: 200.023 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.507 seconds; current allocated memory: 200.906 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.591 seconds; current allocated memory: 201.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 201.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 201.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.235 seconds; current allocated memory: 201.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.298 seconds; current allocated memory: 204.246 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.189 seconds; current allocated memory: 207.941 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.272 seconds; current allocated memory: 215.977 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.366 seconds; current allocated memory: 228.770 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 233.027 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.422 seconds; current allocated memory: 238.379 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.521 seconds; current allocated memory: 248.848 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 14.147 seconds; current allocated memory: 154.992 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.046 seconds; peak allocated memory: 248.910 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.48 seconds; current allocated memory: 10.695 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.316 seconds; peak allocated memory: 105.664 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.054 seconds; current allocated memory: 93.125 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.456 seconds; current allocated memory: 94.016 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.561 seconds; current allocated memory: 95.047 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.078 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.238 seconds; current allocated memory: 109.801 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 116.699 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.28 seconds; current allocated memory: 148.906 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.381 seconds; current allocated memory: 184.715 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.361 seconds; current allocated memory: 190.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 191.496 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 192.359 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 192.527 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.978 seconds; current allocated memory: 199.820 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.484 seconds; current allocated memory: 200.113 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.549 seconds; current allocated memory: 200.613 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 200.828 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.063 seconds; current allocated memory: 201.137 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 201.340 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.296 seconds; current allocated memory: 203.566 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.181 seconds; current allocated memory: 206.859 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.297 seconds; current allocated memory: 215.938 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.364 seconds; current allocated memory: 228.719 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 232.316 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.476 seconds; current allocated memory: 238.781 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.531 seconds; current allocated memory: 248.207 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.787 seconds; current allocated memory: 155.117 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.796 seconds; peak allocated memory: 248.285 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.908 seconds; current allocated memory: 10.914 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 33.744 seconds; peak allocated memory: 104.672 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.024 seconds; current allocated memory: 93.938 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.185 seconds; current allocated memory: 94.867 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.289 seconds; current allocated memory: 95.902 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.934 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 110.250 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.216 seconds; current allocated memory: 117.590 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.215 seconds; current allocated memory: 149.082 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.363 seconds; current allocated memory: 185.742 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.267 seconds; current allocated memory: 191.117 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 192.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 193.273 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 193.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.981 seconds; current allocated memory: 200.371 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.493 seconds; current allocated memory: 200.812 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.545 seconds; current allocated memory: 201.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 201.258 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 201.590 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.219 seconds; current allocated memory: 201.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.279 seconds; current allocated memory: 204.133 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.185 seconds; current allocated memory: 207.391 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.259 seconds; current allocated memory: 216.199 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.312 seconds; current allocated memory: 228.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.225 seconds; current allocated memory: 233.121 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.445 seconds; current allocated memory: 239.277 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.525 seconds; current allocated memory: 248.930 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 13.817 seconds; current allocated memory: 155.258 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 1 seconds. Total elapsed time: 24.695 seconds; peak allocated memory: 249.184 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.8 seconds; current allocated memory: 10.773 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 26.65 seconds; peak allocated memory: 103.809 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.051 seconds; current allocated memory: 96.594 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.346 seconds; current allocated memory: 98.141 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:50:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:58:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:58:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.49 seconds; current allocated memory: 99.176 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 99.176 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 113.609 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.213 seconds; current allocated memory: 120.867 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:47) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:47) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.215 seconds; current allocated memory: 152.609 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:42:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:37:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:52:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.362 seconds; current allocated memory: 188.500 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.299 seconds; current allocated memory: 194.117 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 195.402 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 196.016 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 196.074 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.975 seconds; current allocated memory: 203.031 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.495 seconds; current allocated memory: 203.879 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.547 seconds; current allocated memory: 204.465 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 204.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 204.711 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.218 seconds; current allocated memory: 204.922 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.278 seconds; current allocated memory: 207.141 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.188 seconds; current allocated memory: 210.492 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.264 seconds; current allocated memory: 219.312 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.321 seconds; current allocated memory: 231.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 235.973 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.433 seconds; current allocated memory: 241.500 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.513 seconds; current allocated memory: 251.730 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 14.25 seconds; current allocated memory: 155.148 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 25.333 seconds; peak allocated memory: 251.785 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.035 seconds; current allocated memory: 93.203 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.15 seconds; current allocated memory: 94.676 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:40)
INFO: [HLS 214-188] Unrolling loop 'readB' (matmul.cpp:35:3) in function 'mult_hw' partially with a factor of 64 (matmul.cpp:7:0)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:59:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:59:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.052 seconds; current allocated memory: 96.113 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 96.113 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 114.926 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.261 seconds; current allocated memory: 122.777 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:59) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:48) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.604 seconds; current allocated memory: 157.605 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:43:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:38:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:53:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.291 seconds; current allocated memory: 207.910 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.326 seconds; current allocated memory: 213.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 214.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'readB'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_2_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_3_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_4_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_5_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_36_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 35). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_52_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 51). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_60_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 59). Please consider using a memory core with more ports or partitioning the array.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_readB' (loop 'readB'): Unable to schedule bus request operation ('gmem_load_64_req', matmul.cpp:38) on port 'gmem' (matmul.cpp:38) due to limited memory ports (II = 63). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 64, Depth = 73, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.106 seconds; current allocated memory: 238.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.73 seconds; current allocated memory: 238.203 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_6_load_3') on array 'B_V_6' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'B_V_6'.
WARNING: [HLS 200-885] The II Violation in module 'mult_hw_Pipeline_mult_outer_mult_middle' (loop 'mult_outer_mult_middle'): Unable to schedule 'load' operation ('B_V_load_1') on array 'B_V' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'B_V'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 7, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.437 seconds; current allocated memory: 242.484 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.526 seconds; current allocated memory: 243.945 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.542 seconds; current allocated memory: 244.496 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 244.523 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 244.676 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 244.914 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.445 seconds; current allocated memory: 247.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.671 seconds; current allocated memory: 268.789 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.657 seconds; current allocated memory: 311.461 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.321 seconds; current allocated memory: 321.770 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 322.766 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.818 seconds; current allocated memory: 328.816 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.735 seconds; current allocated memory: 339.547 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 16 seconds. CPU system time: 2 seconds. Elapsed time: 34.77 seconds; current allocated memory: 246.363 MB.
INFO: [HLS 200-112] Total CPU user time: 17 seconds. Total CPU system time: 2 seconds. Total elapsed time: 45.678 seconds; peak allocated memory: 339.602 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.034 seconds; current allocated memory: 93.441 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.149 seconds; current allocated memory: 94.328 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:59:6) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:59:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.261 seconds; current allocated memory: 95.418 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.418 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.248 seconds; current allocated memory: 109.656 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 116.766 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:59) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:48) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.213 seconds; current allocated memory: 148.977 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:43:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:38:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:53:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.364 seconds; current allocated memory: 185.094 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 190.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 191.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 192.742 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.071 seconds; current allocated memory: 192.793 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.965 seconds; current allocated memory: 199.828 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.488 seconds; current allocated memory: 200.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.544 seconds; current allocated memory: 200.762 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 200.762 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 201.039 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.217 seconds; current allocated memory: 201.340 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 203.699 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.181 seconds; current allocated memory: 206.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.256 seconds; current allocated memory: 215.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.329 seconds; current allocated memory: 228.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 232.535 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.426 seconds; current allocated memory: 238.609 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.515 seconds; current allocated memory: 248.426 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 13.711 seconds; current allocated memory: 155.059 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 24.594 seconds; peak allocated memory: 248.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.036 seconds; current allocated memory: 95.254 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.146 seconds; current allocated memory: 96.184 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:51:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:12:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:13:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:35:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:35:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:59:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:59:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.26 seconds; current allocated memory: 97.414 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 97.418 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 111.965 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.204 seconds; current allocated memory: 119.336 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:24) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:35) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:59) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:48) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:48) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.205 seconds; current allocated memory: 151.035 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:43:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:30:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:38:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:53:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.35 seconds; current allocated memory: 187.129 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.269 seconds; current allocated memory: 192.441 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 193.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.216 seconds; current allocated memory: 194.469 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 194.520 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.949 seconds; current allocated memory: 201.496 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.493 seconds; current allocated memory: 201.805 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.568 seconds; current allocated memory: 202.254 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 202.375 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 202.863 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 203.043 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 205.367 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.318 seconds; current allocated memory: 208.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 217.117 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.313 seconds; current allocated memory: 229.844 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 233.883 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.425 seconds; current allocated memory: 240.258 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.668 seconds; current allocated memory: 250.719 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 13.926 seconds; current allocated memory: 155.480 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 0 seconds. Total elapsed time: 24.789 seconds; peak allocated memory: 250.777 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.026 seconds; current allocated memory: 92.363 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.241 seconds; current allocated memory: 93.668 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.43 seconds; current allocated memory: 95.020 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.023 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 109.684 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 117.613 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.266 seconds; current allocated memory: 148.672 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.383 seconds; current allocated memory: 185.363 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.291 seconds; current allocated memory: 190.656 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 191.922 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 192.645 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 192.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.073 seconds; current allocated memory: 199.734 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.529 seconds; current allocated memory: 200.375 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.582 seconds; current allocated memory: 200.766 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.047 seconds; current allocated memory: 200.777 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 201.160 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.234 seconds; current allocated memory: 201.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 203.723 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.303 seconds; current allocated memory: 207.133 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.228 seconds; current allocated memory: 215.227 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.383 seconds; current allocated memory: 227.949 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 232.250 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.555 seconds; current allocated memory: 238.230 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.738 seconds; current allocated memory: 249.133 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.808 seconds; current allocated memory: 156.797 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.665 seconds; peak allocated memory: 249.203 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.051 seconds; current allocated memory: 93.793 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.59 seconds; current allocated memory: 94.762 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.571 seconds; current allocated memory: 96.035 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 96.070 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 110.559 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.235 seconds; current allocated memory: 117.766 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.254 seconds; current allocated memory: 149.117 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.366 seconds; current allocated memory: 186.043 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.319 seconds; current allocated memory: 191.328 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.083 seconds; current allocated memory: 192.551 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 193.301 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 193.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.013 seconds; current allocated memory: 200.578 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.491 seconds; current allocated memory: 200.758 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.549 seconds; current allocated memory: 201.105 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 201.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 201.586 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 201.883 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 204.270 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 207.438 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 215.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.351 seconds; current allocated memory: 228.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.265 seconds; current allocated memory: 232.703 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.527 seconds; current allocated memory: 238.414 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.668 seconds; current allocated memory: 249.238 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 15.131 seconds; current allocated memory: 155.461 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 26.14 seconds; peak allocated memory: 249.297 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.431 seconds; current allocated memory: 11.223 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 36.361 seconds; peak allocated memory: 109.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.027 seconds; current allocated memory: 93.176 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.208 seconds; current allocated memory: 94.277 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.336 seconds; current allocated memory: 95.648 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.648 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 109.988 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 117.180 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.199 seconds; current allocated memory: 149.117 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.35 seconds; current allocated memory: 185.203 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.291 seconds; current allocated memory: 190.613 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 191.945 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 192.645 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 192.648 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.966 seconds; current allocated memory: 199.820 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 200.504 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.551 seconds; current allocated memory: 200.859 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 200.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 201.309 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 201.527 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 203.812 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.312 seconds; current allocated memory: 207.000 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.238 seconds; current allocated memory: 215.156 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.281 seconds; current allocated memory: 227.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 232.035 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.419 seconds; current allocated memory: 238.086 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.667 seconds; current allocated memory: 248.820 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 14.054 seconds; current allocated memory: 155.656 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 0 seconds. Total elapsed time: 24.951 seconds; peak allocated memory: 248.875 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.028 seconds; current allocated memory: 95.414 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.24 seconds; current allocated memory: 96.309 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.308 seconds; current allocated memory: 97.445 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 97.445 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 111.949 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 119.520 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.203 seconds; current allocated memory: 150.949 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.351 seconds; current allocated memory: 187.227 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.256 seconds; current allocated memory: 192.465 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 193.891 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.213 seconds; current allocated memory: 194.496 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.062 seconds; current allocated memory: 194.625 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.977 seconds; current allocated memory: 201.480 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.497 seconds; current allocated memory: 202.141 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.541 seconds; current allocated memory: 202.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 202.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 203.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 203.312 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 205.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.302 seconds; current allocated memory: 208.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.239 seconds; current allocated memory: 216.840 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.306 seconds; current allocated memory: 229.609 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 233.941 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.413 seconds; current allocated memory: 240.422 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.658 seconds; current allocated memory: 251.070 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 14.03 seconds; current allocated memory: 155.703 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 0 seconds. Total elapsed time: 24.951 seconds; peak allocated memory: 251.125 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.164 seconds; current allocated memory: 10.750 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 28.026 seconds; peak allocated memory: 103.613 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.032 seconds; current allocated memory: 93.395 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.205 seconds; current allocated memory: 94.547 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:61:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:45:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:45:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:69:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:69:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.276 seconds; current allocated memory: 95.770 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.770 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.185 seconds; current allocated memory: 109.715 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 117.262 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:37) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:45) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:69) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:58) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:58) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.201 seconds; current allocated memory: 149.277 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:53:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:40:7)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:48:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:63:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.326 seconds; current allocated memory: 184.449 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 189.441 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.068 seconds; current allocated memory: 190.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.219 seconds; current allocated memory: 191.504 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 191.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.977 seconds; current allocated memory: 198.652 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.486 seconds; current allocated memory: 199.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.56 seconds; current allocated memory: 199.816 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 199.820 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 200.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 200.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.268 seconds; current allocated memory: 202.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.301 seconds; current allocated memory: 205.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 214.160 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.279 seconds; current allocated memory: 226.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.228 seconds; current allocated memory: 230.836 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.417 seconds; current allocated memory: 236.754 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.652 seconds; current allocated memory: 247.691 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 13.873 seconds; current allocated memory: 154.340 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 24.737 seconds; peak allocated memory: 247.750 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.718 seconds; current allocated memory: 11.359 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.573 seconds; peak allocated memory: 103.824 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.027 seconds; current allocated memory: 93.828 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.452 seconds; current allocated memory: 94.680 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:61:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:69:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:69:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.685 seconds; current allocated memory: 95.742 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.742 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.213 seconds; current allocated memory: 110.105 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 117.289 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:37) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:45) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:69) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:58) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:58) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.274 seconds; current allocated memory: 148.758 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:53:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:40:7)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:48:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:63:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.357 seconds; current allocated memory: 184.598 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 189.797 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 190.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 191.918 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.076 seconds; current allocated memory: 191.949 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.041 seconds; current allocated memory: 199.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.52 seconds; current allocated memory: 199.715 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.567 seconds; current allocated memory: 200.383 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 200.391 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 200.742 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.221 seconds; current allocated memory: 201.043 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 203.273 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.162 seconds; current allocated memory: 206.137 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.263 seconds; current allocated memory: 215.012 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.386 seconds; current allocated memory: 228.078 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 231.344 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.462 seconds; current allocated memory: 237.918 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.534 seconds; current allocated memory: 247.531 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.729 seconds; current allocated memory: 153.742 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.645 seconds; peak allocated memory: 247.590 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.399 seconds; current allocated memory: 11.039 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.253 seconds; peak allocated memory: 103.836 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.04 seconds; current allocated memory: 92.938 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.266 seconds; current allocated memory: 93.844 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:61:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:45:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:45:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:69:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:69:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.322 seconds; current allocated memory: 95.008 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.008 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 109.059 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 116.238 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:37) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:45) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:58) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:69) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:58) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:58) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.216 seconds; current allocated memory: 148.109 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:53:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:40:7)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:48:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:63:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.333 seconds; current allocated memory: 183.625 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 188.754 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 190.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.207 seconds; current allocated memory: 190.688 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 190.688 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.994 seconds; current allocated memory: 197.930 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.521 seconds; current allocated memory: 198.258 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.606 seconds; current allocated memory: 198.789 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.063 seconds; current allocated memory: 198.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.071 seconds; current allocated memory: 199.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 199.453 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.288 seconds; current allocated memory: 201.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.306 seconds; current allocated memory: 204.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.255 seconds; current allocated memory: 212.809 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.341 seconds; current allocated memory: 225.219 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 230.586 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.433 seconds; current allocated memory: 235.629 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.677 seconds; current allocated memory: 247.293 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.275 seconds; current allocated memory: 154.410 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.168 seconds; peak allocated memory: 247.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.958 seconds; current allocated memory: 10.809 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.834 seconds; peak allocated memory: 104.531 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.028 seconds; current allocated memory: 93.766 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.315 seconds; current allocated memory: 94.887 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.5 seconds; current allocated memory: 95.934 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.934 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.205 seconds; current allocated memory: 110.832 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 118.148 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.234 seconds; current allocated memory: 149.457 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.358 seconds; current allocated memory: 185.566 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.322 seconds; current allocated memory: 191.109 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 192.379 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.228 seconds; current allocated memory: 193.133 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 193.133 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.026 seconds; current allocated memory: 200.164 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.495 seconds; current allocated memory: 200.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.571 seconds; current allocated memory: 201.289 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.041 seconds; current allocated memory: 201.355 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 201.633 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.231 seconds; current allocated memory: 201.762 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 204.004 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.295 seconds; current allocated memory: 207.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.232 seconds; current allocated memory: 215.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.337 seconds; current allocated memory: 228.777 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 233.004 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.481 seconds; current allocated memory: 239.137 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.687 seconds; current allocated memory: 249.781 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.704 seconds; current allocated memory: 156.023 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.6 seconds; peak allocated memory: 249.836 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.364 seconds; current allocated memory: 11.039 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 37.66 seconds; peak allocated memory: 117.121 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.036 seconds; current allocated memory: 93.164 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.302 seconds; current allocated memory: 94.164 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 2048 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.368 seconds; current allocated memory: 95.293 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.297 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 111.594 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.248 seconds; current allocated memory: 118.523 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.282 seconds; current allocated memory: 149.664 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.34 seconds; current allocated memory: 187.109 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.253 seconds; current allocated memory: 192.855 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 194.129 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 194.594 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 194.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.992 seconds; current allocated memory: 201.914 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.494 seconds; current allocated memory: 202.141 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.574 seconds; current allocated memory: 202.730 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 202.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 202.949 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 203.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.281 seconds; current allocated memory: 205.309 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.337 seconds; current allocated memory: 208.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 217.359 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.328 seconds; current allocated memory: 230.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.269 seconds; current allocated memory: 234.570 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.493 seconds; current allocated memory: 240.355 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.723 seconds; current allocated memory: 251.258 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.61 seconds; current allocated memory: 158.102 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.521 seconds; peak allocated memory: 251.312 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.062 seconds; current allocated memory: 11.020 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.913 seconds; peak allocated memory: 104.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.029 seconds; current allocated memory: 93.883 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.46 seconds; current allocated memory: 94.672 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 8192 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.717 seconds; current allocated memory: 95.703 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 95.703 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 111.145 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 117.340 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.39 seconds; current allocated memory: 149.336 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.088 seconds; current allocated memory: 188.168 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.27 seconds; current allocated memory: 193.426 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 194.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 195.398 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 195.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.983 seconds; current allocated memory: 202.723 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.518 seconds; current allocated memory: 202.910 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.567 seconds; current allocated memory: 203.602 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 203.602 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 203.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 204.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.282 seconds; current allocated memory: 206.453 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.297 seconds; current allocated memory: 209.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 217.918 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.375 seconds; current allocated memory: 230.418 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.249 seconds; current allocated memory: 235.051 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.459 seconds; current allocated memory: 240.328 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.687 seconds; current allocated memory: 251.781 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 17.016 seconds; current allocated memory: 157.992 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.901 seconds; peak allocated memory: 251.840 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.004 seconds; current allocated memory: 11.051 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.872 seconds; peak allocated memory: 104.117 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.035 seconds; current allocated memory: 93.688 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.298 seconds; current allocated memory: 94.523 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.441 seconds; current allocated memory: 95.715 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.715 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.209 seconds; current allocated memory: 110.465 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.217 seconds; current allocated memory: 117.742 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.249 seconds; current allocated memory: 149.805 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.36 seconds; current allocated memory: 185.586 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.255 seconds; current allocated memory: 190.746 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.081 seconds; current allocated memory: 191.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.221 seconds; current allocated memory: 192.812 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 192.812 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.011 seconds; current allocated memory: 200.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 200.227 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.574 seconds; current allocated memory: 200.652 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 200.688 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 201.105 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.236 seconds; current allocated memory: 201.309 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 203.773 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.304 seconds; current allocated memory: 206.906 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.234 seconds; current allocated memory: 215.746 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.356 seconds; current allocated memory: 228.312 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 232.879 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.509 seconds; current allocated memory: 239.305 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.689 seconds; current allocated memory: 249.914 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.595 seconds; current allocated memory: 156.281 MB.
INFO: [HLS 200-112] Total CPU user time: 3 seconds. Total CPU system time: 0 seconds. Total elapsed time: 25.5 seconds; peak allocated memory: 249.969 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.17 seconds; current allocated memory: 11.129 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 28.033 seconds; peak allocated memory: 104.426 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.044 seconds; current allocated memory: 94.473 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.438 seconds; current allocated memory: 95.895 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 8192 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.609 seconds; current allocated memory: 97.094 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.001 seconds; current allocated memory: 97.125 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.255 seconds; current allocated memory: 112.309 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.266 seconds; current allocated memory: 119.477 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.301 seconds; current allocated memory: 150.996 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.122 seconds; current allocated memory: 189.570 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.289 seconds; current allocated memory: 195.148 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 196.402 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.235 seconds; current allocated memory: 197.129 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 197.129 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.007 seconds; current allocated memory: 204.453 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.518 seconds; current allocated memory: 204.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.59 seconds; current allocated memory: 205.012 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.048 seconds; current allocated memory: 205.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.073 seconds; current allocated memory: 205.457 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.242 seconds; current allocated memory: 205.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.291 seconds; current allocated memory: 208.227 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 211.180 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 219.914 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.443 seconds; current allocated memory: 232.223 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.272 seconds; current allocated memory: 236.684 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.561 seconds; current allocated memory: 242.457 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.752 seconds; current allocated memory: 253.668 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 17.226 seconds; current allocated memory: 159.199 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 0 seconds. Total elapsed time: 28.189 seconds; peak allocated memory: 253.719 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 18.382 seconds; current allocated memory: 11.410 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 29.32 seconds; peak allocated memory: 104.754 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.037 seconds; current allocated memory: 92.160 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.37 seconds; current allocated memory: 93.691 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 2048 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.4 seconds; current allocated memory: 94.910 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 94.914 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 111.305 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 118.324 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.313 seconds; current allocated memory: 149.777 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.371 seconds; current allocated memory: 186.789 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.286 seconds; current allocated memory: 192.395 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 193.598 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.234 seconds; current allocated memory: 194.152 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 194.152 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.048 seconds; current allocated memory: 201.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.505 seconds; current allocated memory: 201.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.558 seconds; current allocated memory: 202.000 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 202.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 202.488 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.238 seconds; current allocated memory: 202.758 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.284 seconds; current allocated memory: 205.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.312 seconds; current allocated memory: 208.531 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.239 seconds; current allocated memory: 217.281 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.481 seconds; current allocated memory: 230.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 234.160 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.506 seconds; current allocated memory: 240.254 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.071 seconds; current allocated memory: 251.086 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 16.376 seconds; current allocated memory: 158.938 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.32 seconds; peak allocated memory: 251.148 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.573 seconds; current allocated memory: 11.285 MB.
INFO: [HLS 200-112] Total CPU user time: 0 seconds. Total CPU system time: 0 seconds. Total elapsed time: 31.448 seconds; peak allocated memory: 104.199 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.035 seconds; current allocated memory: 92.996 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.532 seconds; current allocated memory: 93.805 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 8192 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.871 seconds; current allocated memory: 94.934 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 94.934 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 110.445 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.284 seconds; current allocated memory: 117.199 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.358 seconds; current allocated memory: 149.180 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.209 seconds; current allocated memory: 187.500 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.312 seconds; current allocated memory: 192.719 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.089 seconds; current allocated memory: 193.926 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 194.730 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.062 seconds; current allocated memory: 194.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.153 seconds; current allocated memory: 202.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.551 seconds; current allocated memory: 202.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.612 seconds; current allocated memory: 202.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.052 seconds; current allocated memory: 202.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 203.082 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.247 seconds; current allocated memory: 203.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.303 seconds; current allocated memory: 205.723 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.324 seconds; current allocated memory: 208.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.268 seconds; current allocated memory: 216.832 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.518 seconds; current allocated memory: 229.652 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.264 seconds; current allocated memory: 234.234 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.605 seconds; current allocated memory: 241.113 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.786 seconds; current allocated memory: 251.387 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 18.18 seconds; current allocated memory: 158.469 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 29.074 seconds; peak allocated memory: 251.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.636 seconds; current allocated memory: 11.086 MB.
INFO: [HLS 200-112] Total CPU user time: 0 seconds. Total CPU system time: 0 seconds. Total elapsed time: 29.553 seconds; peak allocated memory: 103.824 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
Tool Version Limit: 2019.12
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xcu200-fsgd2104-2-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1510] Running: set_part xcu200-fsgd2104-2-e 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: source ./matmul/sol1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name mult_hw mult_hw 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.041 seconds; current allocated memory: 93.629 MB.
INFO: [HLS 200-10] Analyzing design file 'matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.486 seconds; current allocated memory: 94.652 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ssdm_int<32, false>::ssdm_int(unsigned int)' into 'ap_int_base<32, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base(int)' into 'ap_uint<32>::ap_uint(int)'
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:185:106)
INFO: [HLS 214-131] Inlining function 'ssdm_int<16, false>::ssdm_int(unsigned short)' into 'ap_int_base<16, false>::ap_int_base(int)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:214:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:339)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:516)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' (C:/Xilinx/Vitis_HLS/2022.2/common/technology/autopilot\ap_int_base.h:1494:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>& ap_int_base<32, false>::operator+=<16, false>(ap_int_base<16, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<8, false>::mult operator*<8, false, 8, false>(ap_int_base<8, false> const&, ap_int_base<8, false> const&)' into 'mult_hw(ap_uint<8>*, ap_uint<8>*, ap_uint<32>*)' (matmul.cpp:52:40)
INFO: [HLS 214-248] Applying array_partition to 'A': Cyclic partitioning with factor 16 on dimension 1. (matmul.cpp:13:13)
INFO: [HLS 214-248] Applying array_partition to 'B': Block partitioning with factor 16 on dimension 1. (matmul.cpp:14:16)
INFO: [HLS 214-115] Multiple burst reads of length 4096 and bit width 8 in loop 'readB'(matmul.cpp:36:3) has been inferred on bundle 'gmem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:36:3)
INFO: [HLS 214-115] Multiple burst writes of length 4096 and bit width 32 in loop 'writeC'(matmul.cpp:60:6) has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (matmul.cpp:60:6)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.699 seconds; current allocated memory: 95.535 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.002 seconds; current allocated memory: 95.539 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 110.195 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.237 seconds; current allocated memory: 117.238 MB.
INFO: [XFORM 203-510] Pipelining loop 'readA' (matmul.cpp:25) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'readB' (matmul.cpp:36) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' automatically.
INFO: [XFORM 203-510] Pipelining loop 'writeC' (matmul.cpp:60) in function 'mult_hw' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'mult_middle' (matmul.cpp:49) in function 'mult_hw' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'mult_inner' (matmul.cpp:49) in function 'mult_hw' completely with a factor of 64.
INFO: [XFORM 203-11] Balancing expressions in function 'mult_hw' (matmul.cpp:7:8)...63 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.313 seconds; current allocated memory: 149.379 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'mult_outer' (matmul.cpp:44:14) in function 'mult_hw'.
INFO: [HLS 200-472] Inferring partial write operation for 'A.V' (matmul.cpp:31:27)
INFO: [HLS 200-472] Inferring partial write operation for 'B.V' (matmul.cpp:39:7)
INFO: [HLS 200-472] Inferring partial write operation for 'C.V' (matmul.cpp:54:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.391 seconds; current allocated memory: 185.570 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'mult_hw' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readA'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 10, loop 'readA'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.338 seconds; current allocated memory: 191.008 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.091 seconds; current allocated memory: 192.328 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'readB'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'readB'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.259 seconds; current allocated memory: 193.008 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 193.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'B_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'A_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'mult_outer_mult_middle'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'mult_outer_mult_middle'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.136 seconds; current allocated memory: 199.969 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.542 seconds; current allocated memory: 200.438 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'writeC'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'writeC'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.608 seconds; current allocated memory: 201.035 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 201.039 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 201.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.254 seconds; current allocated memory: 201.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readA' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readA' pipeline 'readA' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readA'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.319 seconds; current allocated memory: 203.891 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_readB' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_readB' pipeline 'readB' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_readB/m_axi_gmem_ARUSER' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_readB'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.352 seconds; current allocated memory: 207.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_mult_outer_mult_middle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_mult_outer_mult_middle' pipeline 'mult_outer_mult_middle' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_17_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_164_8_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_mult_outer_mult_middle'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 215.586 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw_Pipeline_writeC' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'mult_hw_Pipeline_writeC' pipeline 'writeC' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'mult_hw_Pipeline_writeC/m_axi_gmem0_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw_Pipeline_writeC'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.494 seconds; current allocated memory: 228.434 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mult_hw' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/in2' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'mult_hw/out_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'mult_hw' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'in1', 'in2' and 'out_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'mult_hw'.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_A_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_B_V_RAM_1WNR_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'mult_hw_C_V_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 232.398 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.621 seconds; current allocated memory: 237.848 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.773 seconds; current allocated memory: 249.219 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for mult_hw.
INFO: [VLOG 209-307] Generating Verilog RTL for mult_hw.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.079 seconds; current allocated memory: 155.602 MB.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 27.109 seconds; peak allocated memory: 249.277 MB.
